#+AUTHOR:    Евгений Погребняк
#+TITLE:     Learning Emacs Org-Mode
#+EMAIL:     e.pogrenyak@gmail.com
#+SEQ_TODO: WAITING(w) TODO(t) WIP(p) NEED_HELP(h) SOMEDAY(s) | DONE(d) CANCELLED(f)
#+ARCHIVE: ARCHIVE.org::

* About this file

In this file I add new things I learn about Emacs and orgmode.

I try to avoid to save time:
- editing configuration extensively
- programming in lisp
- spacemacs or emacs-doom
- org-roam 
- email with gnus.

* Starting Emacs

** Options to run Emacs

- WSL in cmder bash (ubuntu)
- Windows Emacs MSI (bad russian font spacing)
- VSCode extension (no agenda view)

** Basic pipeline

 - Install emacs on WSL with =sudo apt-get install emacs= 
 - Launch emacs with =emacs= command
 - Open a file with F10 - File menu
 - Edit file using orgmode
 - Save file *C-x C-s*
 - Exit Emacs *C-x C-c*

*** DONE Improvements:

  - F10 may need Fnlock to work on Lenovo - use Fn-Esc.
  - Must configure terminal to resolve [[https://emacs.stackexchange.com/questions/68105/how-to-use-ctrl-c-on-wsl-key-binding-conflict][key binding conflicts]] like Ctrl-C.
  - Launch emacs with filename =emacs -nw README.org= (-nw is for command-line mode)
 
*** DONE Set =org-support-shift-select= and CUA option
  - Selection with Shift is already built-in part of Emacs, but not org-mode
  - Start with 'M-x customize' to find options about Shift selection
  - Set CUA (Ctrl-Z/X/C/V) as part of F10 menu
  - Save options
  - See also =org-disputed-keys= in [[https://orgmode.org/manual/Conflicts.html][Orgmode conflicts]].

*** DONE Where is the config?
  
  Use just one, any of them:
  - ~/.emacs is a file
  - ~/.emacs.d is a directory with init.el

*** WIP Using X410 video system                                       

  - [[https://emacsredux.com/blog/2020/09/23/using-emacs-on-windows-with-wsl2/][Original article with X410 recommendation]] 
  - On WSL 1 works at [[https://x410.dev/cookbook/wsl/using-x410-with-wsl2/][127.0.0.1]]
  - One must buy X410 from Windows store (USD10 with discount), 
    but it saves a ton of time for configuration, including the fonts.
  - HELP NEEDED: cannot change [[https://x410.dev/cookbook/keyboard-layout/][keyboard layout]] 
                to Russian in X410 - maybe need xfce.
  - QUESTION: =EMACS FILENAME &= starts with two windows, 
              how to disable the tutorial window (either .emacs or flag in command line)? 

* List of questions

*** Wanted [0/4]

   - [ ] What useful things do you do with agenda?
   - [ ] How to close agenda buffer
   - [ ] Unsure about finding and replacing text
   - [ ] Unsure about working with windows 
   - [ ] Add timestamp with current time, not just date 
  
*** Someday [0/5]

   - [ ] View calendar (it was popping up accidantally when I hit something wrong)
   - [ ] Recalulcate list stats (I double click C-c C-c now to toggle and recalculate)
   - [ ] Move line across headers, beyond own section (Alt - arrow has limits within a header)    
   - [ ] Use gmail from emacs (gnus)
   - [ ] git from emacs (magit)

*** Cancelled [0/5]
   - [ ] Change selection color to lightblue (I did, but it did not save)
   - [ ] Fix wrong spacing of Russian fonts in Windows MSI Emacs GUI (X410)
   - [ ] [[https://emacs.stackexchange.com/questions/169/how-do-i-reload-a-file-in-a-buffer?newreg=a3feb7dd0515464f962f420449b8f1a5][Reload on file change]] will allow editing in VS Code (dangerous conflicts)     


* Using orgmode

*** <TAB> is all you need

 - TAB shows/hides headers (quite powerful!)
 - Shift-TAB opens all headers 

*** Make a selection, copy and paste selection 

You can configure orgmode to use Shift-arrows for selection.

*** Getting around headers

 - Alt + left or right changes header level
 - Alt + up or down moves lines around
 - Shift - arrow: 
   - changes list numbering style
   - cycles TODO-DONE in header
   - selects in CUA mode

*** Create a hyperlink
  :PROPERTIES:
  :CUSTOM_ID: hyperlink_target
  :END:

  - Use =[[url][]]= syntax or C-c C-l
  - Internal [[#hyperlink_target][hyperlink here]]
  - Or [[file:ARCHIVE.org][link to file]]
  - [[https://gist.github.com/will-henney/d8564133e07e546789c0][Link example]]

*** Use timestamps

  SCHEDULED: <2021-08-15 Sun>

  As [[https://orgmode.org/guide/Creating-Timestamps.html#Creating-Timestamps][guide]] suggests:

    - C-c . for timestamp
    - S-arrow for change

**** WIP How to put a timestamp with time, not just date? :QUESTION:

*** Checkboxes

    - You must type [0/0] or [0%] for checkbox
    - Only X counts for completion, not `x` or `+`
    - C-c C-c toggles and recalculates
    - QUESTION: what can recalculate on its own?
    - Check Rainer König video [[https://www.youtube.com/watch?v=gvgfmED8RD4&list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&index=5&t=444s][OrgMode E01S05: Checklists]]

    Sample checkbox list [2/3], [66%]:

      - [X] Item 1
      - [X] Item 2
      - [ ] Item 3
       
*** Agenda

     - Use F10 and menu for agenda view
     - C-a - key binding must be configured

*** WIP Clocking
    :LOGBOOK:
    CLOCK: [2021-08-16 Mon 14:29]--[2021-08-16 Mon 14:35] =>  0:06
    :END:

    *** Clock this!
    - Start: C-c C-x C-i
    - End: C-c C-x C-o

 #+BEGIN_QUOTE
    It is easy to “clock-in” to a particular task by positioning point within an item 
    and typing C-c C-x C-i and clocking out with C-c C-x C-o.
    See the documentation for details.
 #+END_QUOTE

    https://www.adventuresinwhy.com/post/org-mode-timekeeping/

*** Table

 - Start table from menu
 - C-c C-c to format

| Command     | Action                 |
|-------------+------------------------|
| M-x shell   | Run Shell              |
| C-g         | Kill or stop something |
| C-c C-c     | Toggle or recalculate  |
| C-k C-y     | Kill and undo line     |
| C-g         | Exit                   |
| ESC-ESC-ESC | Exit                   |
| q           | Exit                   |

*** Run bash

    M-X shell

*** Some other completed tasks
    - Sort this list is C-c ^
    - Add more cycling todo tags =#+SEQ_TODO:= 
    - Archive tasks through menu
    - Defintion list with =::= separator
    - Github search for org files with =[[https://github.com/search?o=asc&q=language%3Aorg&s=indexed&type=Code][language:org]]=
    - C-k C-y can move lines

* Reference
** Concepts

 - buffer :: a screen that represents a file or Emacs own output
 - frame :: is a new window for the whole program
 - modeline :: a line at the bottom of a screen with something like =-UUU(DOS)**--F1=
 - window :: is a windows inside editor

** Notation

  - * is always a header  
  - drawer box has :NAME: and :END:
  
** Quotes

-[[https://www.reddit.com/r/emacs/comments/42qr9h/orgmode_for_gtd/d0fupy5?utm_source=share&utm_medium=web2x&context=3][ @Trevoke via reddit]]:

#+BEGIN_QUOTE
The best advice I've heard for using org-mode in some sort of GTD system 
was not to try and set up categories when you start. 
Start with just a bunch of TODOs, and slowly grow the system as you feel the need to.
#+END_QUOTE


* Links

** Videos

Essential:

 - [[https://www.youtube.com/watch?v=oJTwQvgfgMM][Carsten Dominik keynote (2008)]]
 - [[https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE][Rainer König lesson series]]

Extension:

 - [[https://www.youtube.com/watch?v=JWD1Fpdd4Pc][Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs]]
 - [[https://www.youtube.com/watch?v=ZbxUJz6a9Io][Andrew Tropin - Modern Emacs (2021)]]

Academic:

 - [[https://arxiv.org/abs/2008.06030][On the design of text editors]]

** Blogs and success stories
 
 - https://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs/
 - https://blog.aaronbieber.com/2016/09/24/an-agenda-for-life-with-org-mode.html

** Orgfiles on github

 - https://github.com/abcdw/notes/blob/master/notes/20210805075718-the_modern_emacs.org
