#+AUTHOR:    Евгений Погребняк
#+TITLE:     Learning Emacs Org-Mode
#+EMAIL:     e.pogrebnyak@gmail.com
#+SEQ_TODO:  MAYBE(m) QUESTION(q) TODO(t) DOING(d) DELEGATED(e) WAITING(w) | DONE(+) CANCELLED(c) SOMEDAY(s)
#+ARCHIVE:   ARCHIVE.org::
#+OPTIONS:   toc:3

In this file I add new things I learn about Emacs and orgmode.
=QUESTION= and =#FIXME= mark section where help is needed.

# FIMXE: long load time (check too many packages)

* Starting Emacs

** Options to run Emacs

- [X] WSL in terminal (I use cmder) with bash (Ubuntu)
- [X] XServ graphics
- [X] VSCode extension (no agenda view)
- [ ] Windows Emacs MSI executable (bad Russian font spacing)

# FIXME - exclide this from html output
:NOTE:
Console vs teminal vs shell.
:END:

** Basic pipeline

 - Install emacs on WSL with =sudo apt-get install emacs= 
 - Launch emacs with =emacs -nw <FILENAME.org>= command
 - Open a file with F10 - File menu
 - Edit file
 - Save file *C-x C-s*
 - Exit Emacs *C-x C-c*

** Improvements and changes

*** DONE Configure terminal to avoid key conflicts

Must configure terminal to resolve 
[[https://emacs.stackexchange.com/questions/68105/how-to-use-ctrl-c-on-wsl-key-binding-conflict][key binding conflicts]] 
like Ctrl-C.
 
*** DONE Set =org-support-shift-select= and CUA option
  - Selection with Shift is already built-in part of Emacs, but not org-mode
  - Start with 'M-x customize' to find options about Shift selection
  - Set CUA (Ctrl-Z/X/C/V) as part of F10 menu
  - Save options
  - See also =org-disputed-keys= in [[https://orgmode.org/manual/Conflicts.html][Orgmode conflicts]].

*** DONE Where is the config?
  
Use just one, any of them:
  - ~/.emacs is a config file
  - ~/.emacs.d is a directory with init.el

*** WIP Using X410 video system                                       

  - [[https://emacsredux.com/blog/2020/09/23/using-emacs-on-windows-with-wsl2/][Original article with X410 recommendation]] 
  - On WSL 1 works at [[https://x410.dev/cookbook/wsl/using-x410-with-wsl2/][127.0.0.1]]
  - One must buy X410 from Windows store (USD10 with discount), 
    but it saves a ton of time for configuration, including the fonts.

**** QUESTION [A] Change keyboard layout in X410     
  - HELP NEEDED: cannot change [[https://x410.dev/cookbook/keyboard-layout/][keyboard layout]] 
                to Russian in X410 - maybe need xfce.

**** QUESTION [C] Startup behaviour change
  - QUESTION: =EMACS FILENAME &= starts with two windows, 
              how to disable the tutorial window (either .emacs or flag in command line)? 
	      
* Using Emacs

** Make a selection, copy and paste selection 

You can configure orgmode to use Shift-arrows for selection.
See =org-support-shift-select=.

** QUESTION [C] Finding and replacing text

Unsure how it works on emacs, is it C-s? What about replace?
Please recommend some tutorial on this?

** QUESTION [B] Working with windows 

I currently use <Remove other windows> from File menu.
Maybe I can do better.

** QUESTION [A] How to select a vertical block of text?

Similar to Alt-Shift-arrows in Notepad++.

** Run bash

~M-X shell

** QUESTION [B] How to run some command from a command line?

Imagine I needed something like 

~emacs README.md --run "C-c C-e h h"

How would it do it?

** DONE Refresh file from disk

The command is *M-x revert-buffer* 
([[https://emacs.stackexchange.com/questions/169/how-do-i-reload-a-file-in-a-buffer][details]]).

** Is there somethign similar to prettoer or black code formatter for org files?

M-x revert-buffer 

* Using orgmode
** <TAB> is all you need

- TAB shows/hides headers (quite powerful!)
- Shift-TAB opens all headers 

** Getting around headers

 - Alt + left or right changes header level
 - Alt + up or down moves lines around
 - Shift - arrow: 
   - changes list numbering style
   - cycles TODO-DONE in header
   - selects in CUA mode

**** WAITING Move line across headers beyond own section 

  - Alt - arrow has limits within a header  
  - In VS Code Alt Up/Down move line wherever
  - Is there some key combination that moves lines across file
  - Currently using C-k C-y
  - Shift-Arrow-Up/Down maybe?
  - https://emacs.stackexchange.com/questions/68140/unrestricted-movement-of-lines-alt-up-down

** Create a hyperlink
   :PROPERTIES:
   :CUSTOM_ID: hyperlink_target
   :END:
# FIXME: The above does not seem to an <a > anchor

 - Use =[[url][]]= syntax or C-c C-l
 - Internal [[#hyperlink_target][hyperlink here]]
 - Or [[file:ARCHIVE.org][link to file]]
 - [[https://gist.github.com/will-henney/d8564133e07e546789c0][Link example]]

** Use timestamps

  SCHEDULED: <2021-08-15 Sun>

  As [[https://orgmode.org/guide/Creating-Timestamps.html#Creating-Timestamps][guide]] suggests:

    - C-c . for timestamp
    - S-arrow for change

**** QUESTION [A] How to put a timestamp with time, not just date?

** Checkboxes

    - You must type [0/0] or [0%] for checkbox
    - Only X counts for completion, not `x` or `+`
    - C-c C-c toggles and recalculates
    - QUESTION: what can recalculate on its own?
    - Check Rainer König video [[https://www.youtube.com/watch?v=gvgfmED8RD4&list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE&index=5&t=444s][OrgMode E01S05: Checklists]]

    Sample checkbox list [2/3], [66%]:

      - [X] Item 1
      - [X] Item 2
      - [ ] Item 3
       
** Agenda

    - Use F10 and menu for agenda view
    - C-a - key binding must be configured

**** QUESTION [A] Unsolved about agenda:

    - [ ] How to sort agenda by priority?
    - [ ] How to close agenda buffer?
    - [ ] How to move across buffers?

** Clocking
    :LOGBOOK:
    CLOCK: [2021-08-16 Mon 14:29]--[2021-08-16 Mon 14:35] =>  0:06
    :END:

    *** Clock this!
    - Start: C-c C-x C-i
    - End: C-c C-x C-o

 #+BEGIN_QUOTE
    It is easy to “clock-in” to a particular task by positioning point within an item 
    and typing C-c C-x C-i and clocking out with C-c C-x C-o.
 #+END_QUOTE

    https://www.adventuresinwhy.com/post/org-mode-timekeeping/


**** QUESTION [B] What are useful habit with clocking?

  - Does pomodoro help?
   
** Table

 - Start table from menu
 - C-c C-c to format

** Calendar

How to view calendar (it was popping up accidantally when I hit something wrong).

** Other actions

    - Sort this list is C-c ^
    - Add cycling todo tags =#+SEQ_TODO:= 
    - Archive tasks through Org menu
    - Defintion list with =::= separator
    - Github search for org files with =[[https://github.com/search?o=asc&q=language%3Aorg&s=indexed&type=Code][language:org]]=
    - C-k C-y can move lines

* QUESTION [A] Useful scenarios

What are productive scenarios for using org-mode?

-[[https://www.reddit.com/r/emacs/comments/42qr9h/orgmode_for_gtd/d0fupy5?utm_source=share&utm_medium=web2x&context=3][ @Trevoke via reddit]]:

#+BEGIN_QUOTE
The best advice I've heard for using org-mode in some sort of GTD system 
was not to try and set up categories when you start. 
Start with just a bunch of TODOs, and slowly grow the system as you feel the need to.
#+END_QUOTE

* Reference
** Concepts

 - buffer :: a screen that represents a file or Emacs own output
 - frame :: is a new window for the whole program
 - modeline :: a line at the bottom of a screen with something like =-UUU(DOS)**--F1=
 - window :: is a windows inside editor

** Notation

  - * is a header  
  - drawer box has :NAME: and :END:

* Links
** Videos

Essential:

 - [[https://www.youtube.com/watch?v=oJTwQvgfgMM][Carsten Dominik keynote (2008)]]
 - [[https://www.youtube.com/playlist?list=PLVtKhBrRV_ZkPnBtt_TD1Cs9PJlU0IIdE][Rainer König lesson series]]

Extension:

 - [[https://www.youtube.com/watch?v=JWD1Fpdd4Pc][Evil Mode: Or, How I Learned to Stop Worrying and Love Emacs]]
 - [[https://www.youtube.com/watch?v=ZbxUJz6a9Io][Andrew Tropin - Modern Emacs (2021)]]

Academic:

 - [[https://arxiv.org/abs/2008.06030][On the design of text editors]]

** Blogs and success stories
   
 - https://sachachua.com/blog/2014/01/tips-learning-org-mode-emacs/
 - https://blog.aaronbieber.com/2016/09/24/an-agenda-for-life-with-org-mode.html

**** TODO [C] add images from sachachua.com
**** TODO [C] redraw mindmap to simplify

** Orgfiles on github

 - https://github.com/abcdw/notes/blob/master/notes/20210805075718-the_modern_emacs.org
 - https://github.com/zkat/sheeple/blob/5393c74737ccf22c3fd5f390076b75c38453cb04/presentation/sheeple-talk-22-10-09.org
 - https://raw.githubusercontent.com/ymd-h/cpprb/c44cf5d53f807e58f71d1a2e1cf46aa92b5e193d/README.org
 - https://raw.githubusercontent.com/deopurkar/ag2021/f73c35fede17a123806102306ce0c47bc2a87cd9/course.org

* Out of scope

I try to avoid more complicated topics:

- packages and complex configuration
- programming in lisp
- spacemacs, emacs-doom and similar
# Fixme - add link to emacs survey resul answers
- org-roam
- org-capture
- email with gnus
- git with magit 
	      
* Appendix. Key binding cheatsheet

| Command      | Action                 |
|--------------+------------------------|
| M-x <command>    | Run command by name              |
| M-x shell    | Run Shell              |
| F10          | Upper menu        |
| C-s          | Advanced search        |
| C-c C-c      | Toggle or recalculate  |
| C-k C-y      | Kill and undo line     |
| C-g          | Kill, stop or exit     |
| ESC-ESC-ESC  | Exit (hopefully)       |
| q            | Exit (sometimes)       |
| C-c C-e h h  | Create HTML            |
| *Not Emacs:* |                        |
| Fn-Esc       | Lock Fn key (Lenovo)   |

M-x:
 - revert-buffer (in File menu)
 - customize
 - shell
